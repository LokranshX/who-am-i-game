{"version":3,"file":"static/js/433.b392516f.chunk.js","mappings":"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","sources":["components/PlayerCard.js","components/Lobby.js","components/HistoryLog.js"],"sourcesContent":["// frontend/src/components/PlayerCard.js\nimport React, { memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction PlayerCard({ player, isSelf, isTurn }) {\n  const cardClass = `player-card ${isTurn ? 'active-turn' : ''} ${player.guessed ? 'guessed' : ''}`;\n\n  return (\n    <div className={cardClass}>\n      <div className=\"player-avatar\"></div>\n      <div className=\"player-name-container\">\n        <h3 className=\"player-name\">{player.name}</h3>\n        {player.characterSubmitted && !player.characterOnForehead && !player.guessed && (\n          <FontAwesomeIcon icon={faCheckCircle} className=\"ready-icon\" title=\"Персонаж загадан\" />\n        )}\n      </div>\n      \n      {!isSelf && player.characterOnForehead && (\n        <div className=\"character-display\">\n          <span className=\"character-name\">\n            {player.characterOnForehead}\n          </span>\n        </div>\n      )}\n\n      {player.guessed && <span className=\"guessed-badge\">Угадал!</span>}\n    </div>\n  );\n}\n\nexport default memo(PlayerCard);","// frontend/src/components/Lobby.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { socket } from '../socket';\nimport PlayerCard from './PlayerCard';\nimport HistoryLog from './HistoryLog';\n\nfunction Lobby({ game, playerName, socketId, onStartGame, onSubmitCharacter, onLeaveGame }) {\n  const [characterInput, setCharacterInput] = useState('');\n  const navigate = useNavigate();\n  const { gameCode } = useParams();\n\n  useEffect(() => {\n    // Если мы попали на страницу и у нас нет данных об игре, запрашиваем их\n    if (!game) {\n      if (!socket.connected) socket.connect();\n      socket.emit('getGame', gameCode);\n    }\n\n    if (game && game.status === 'in-progress') {\n      navigate(`/game/${game.code}`);\n    }\n  }, [game, gameCode, navigate]);\n\n  // Добавлена более строгая проверка на наличие ключевых полей\n  if (!game || !game.players || !game.actionLog) {\n    return <div className=\"loading-screen\">Подключение к лобби {gameCode}...</div>;\n  }\n\n  const isHost = game.hostId === socketId;\n  const currentPlayer = game.players.find(p => p.id === socketId);\n  const hasSubmittedCharacter = currentPlayer && currentPlayer.characterSubmitted;\n  const allPlayersSubmitted = game.players.every(p => p.characterSubmitted);\n\n  const handleCharacterSubmit = () => {\n    if (characterInput.trim()) {\n      onSubmitCharacter(characterInput.trim());\n      setCharacterInput('');\n    }\n  };\n\n  return (\n    <div className=\"glass-panel\">\n      <div className=\"room-header\">\n        <h1 className=\"room-title\">Лобби игры: {game.code}</h1>\n        <p className=\"room-info\">Вы: {playerName || 'Наблюдатель'} {isHost && '(Хост)'}</p>\n      </div>\n      <div className=\"room-layout\">\n        <div className=\"main-content\">\n          <div className=\"players-section glass-panel\">\n            <h2>Игроки ({game.players.length})</h2>\n            <div className=\"player-list\">\n              {game.players.map((player) => (\n                <PlayerCard key={player.id} player={player} isSelf={player.id === socketId} />\n              ))}\n            </div>\n          </div>\n          <div className=\"character-submission-section glass-panel\">\n            <h2>Загадайте персонажа</h2>\n            {!hasSubmittedCharacter ? (\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  value={characterInput}\n                  onChange={(e) => setCharacterInput(e.target.value)}\n                  placeholder=\"Например: Бэтмен, Гарри Поттер\"\n                  maxLength=\"30\"\n                />\n                <button onClick={handleCharacterSubmit} className=\"btn primary\">\n                  Загадать\n                </button>\n              </div>\n            ) : (\n              <p className=\"submitted-message\">Вы загадали персонажа! Ожидаем других.</p>\n            )}\n          </div>\n          {isHost && (\n            <div className=\"start-game-section\">\n              <button\n                onClick={onStartGame}\n                className=\"btn success\"\n                disabled={!allPlayersSubmitted || game.players.length < 2}\n                title={\n                  game.players.length < 2\n                  ? \"Нужно минимум 2 игрока\"\n                  : !allPlayersSubmitted\n                  ? \"Не все игроки загадали персонажа\"\n                  : \"Начать игру\"\n                }\n              >\n                Начать игру\n              </button>\n              {game.players.length < 2 && <p className=\"waiting-message\">Нужно минимум 2 игрока для начала.</p>}\n              {!allPlayersSubmitted && game.players.length >= 2 && <p className=\"waiting-message\">Ожидаем, пока все загадают персонажей...</p>}\n            </div>\n          )}\n        </div>\n        <div className=\"history-panel glass-panel\">\n          <HistoryLog events={game.actionLog} />\n        </div>\n        <div className=\"exit-button-container\">\n            <button onClick={onLeaveGame} className=\"btn danger\">Выйти из игры</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Lobby;","// frontend/src/components/HistoryLog.js\nimport React, { useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faCheck, faTimes, faBullseye, faSignInAlt, faSignOutAlt, faUserCheck, faGamepad } from '@fortawesome/free-solid-svg-icons';\n\nfunction HistoryLog({ events }) {\n  const eventsEndRef = useRef(null);\n\n  useEffect(() => {\n    eventsEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [events]);\n\n  const renderEvent = (event) => {\n    switch (event.type) {\n      case 'system':\n        return <><FontAwesomeIcon icon={faGamepad} /> <span>{event.text}</span></>;\n      case 'join':\n        return <><FontAwesomeIcon icon={faSignInAlt} /> <strong>{event.playerName}</strong> присоединился к игре.</>;\n      case 'leave':\n        return <><FontAwesomeIcon icon={faSignOutAlt} /> <strong>{event.playerName}</strong> покинул игру.</>;\n      case 'submit':\n        return <><FontAwesomeIcon icon={faUserCheck} /> <strong>{event.playerName}</strong> загадал персонажа.</>;\n      case 'question':\n        return <><FontAwesomeIcon icon={faQuestionCircle} /> <span><strong>{event.playerName}</strong> спросил: \"{event.text}\"</span></>;\n      case 'answer':\n        return <><FontAwesomeIcon icon={event.answer === 'Да' ? faCheck : faTimes} className={event.answer === 'Да' ? 'icon-yes' : 'icon-no'} /> <span><strong>{event.playerName}</strong> ответил: <strong>{event.answer}</strong></span></>;\n      case 'guess':\n        return <><FontAwesomeIcon icon={faBullseye} /> <span><strong>{event.playerName}</strong> угадывает: \"{event.text}\" - {event.isCorrect ? <strong className=\"correct-guess\">Верно!</strong> : 'Неверно.'}</span></>;\n      default:\n        return <span>Неизвестное действие.</span>;\n    }\n  };\n\n  return (\n    <div className=\"history-log-container\">\n      <h3>История игры</h3>\n      <div className=\"history-events\">\n        {events.map((event) => (\n          <div key={event.id} className={`history-event event-type-${event.type}`}>\n            {renderEvent(event)}\n          </div>\n        ))}\n        <div ref={eventsEndRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryLog;"],"names":["PlayerCard","_ref","player","isSelf","isTurn","cardClass","concat","guessed","_jsxs","className","children","_jsx","name","characterSubmitted","characterOnForehead","FontAwesomeIcon","icon","faCheckCircle","title","memo","game","playerName","socketId","onStartGame","onSubmitCharacter","onLeaveGame","characterInput","setCharacterInput","useState","navigate","useNavigate","gameCode","useParams","useEffect","socket","connected","connect","emit","status","code","players","actionLog","isHost","hostId","currentPlayer","find","p","id","hasSubmittedCharacter","allPlayersSubmitted","every","length","map","type","value","onChange","e","target","placeholder","maxLength","onClick","handleCharacterSubmit","trim","disabled","HistoryLog","events","eventsEndRef","useRef","_eventsEndRef$current","current","scrollIntoView","behavior","renderEvent","event","_Fragment","faGamepad","text","faSignInAlt","faSignOutAlt","faUserCheck","faQuestionCircle","answer","faCheck","faTimes","faBullseye","isCorrect","ref"],"sourceRoot":""}