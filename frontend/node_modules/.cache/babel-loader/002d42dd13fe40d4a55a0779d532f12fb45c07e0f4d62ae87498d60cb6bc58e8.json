{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stanislav\\\\Desktop\\\\who-am-i-game\\\\frontend\\\\src\\\\components\\\\GameRoom.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/GameRoom.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PlayerCard from './PlayerCard';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRoom({\n  game,\n  playerName,\n  socketId,\n  characterOnForehead,\n  onAskQuestion,\n  onAnswerQuestion,\n  onMakeGuess,\n  onChatMessage,\n  onLeaveGame\n}) {\n  _s();\n  var _game$players$find;\n  const [questionInput, setQuestionInput] = useState('');\n  const [guessInput, setGuessInput] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Если игры нет или она в статусе ожидания, возвращаем в лобби\n    if (!game || game.status === 'waiting') {\n      navigate(`/lobby/${(game === null || game === void 0 ? void 0 : game.code) || ''}`);\n    }\n  }, [game, navigate]);\n\n  // Пока данные игры не загружены, показываем экран загрузки\n  if (!game) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0438\\u0433\\u0440\\u043E\\u0432\\u043E\\u0439 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Определяем ключевые переменные для удобства\n  const currentPlayer = game.players[game.currentPlayerIndex];\n  const isMyTurn = currentPlayer && currentPlayer.id === socketId;\n  const myPlayer = game.players.find(p => p.id === socketId);\n  const hasGuessed = myPlayer === null || myPlayer === void 0 ? void 0 : myPlayer.guessed;\n\n  // Определяем, нужно ли текущему игроку отвечать на вопрос\n  const lastMessage = game.chatMessages.length > 0 ? game.chatMessages[game.chatMessages.length - 1] : null;\n  // Кнопки \"Да/Нет\" показываются всем, кто не ходит в данный момент, после того как был задан вопрос.\n  // Сервер сам определит, чей ответ является правильным.\n  const amIAnswering = !isMyTurn && lastMessage && lastMessage.sender === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.name);\n  const handleAskQuestion = () => {\n    if (questionInput.trim() && isMyTurn && !hasGuessed) {\n      onAskQuestion(questionInput.trim());\n      setQuestionInput('');\n    }\n  };\n  const handleMakeGuess = () => {\n    if (guessInput.trim() && isMyTurn && !hasGuessed) {\n      onMakeGuess(guessInput.trim());\n      setGuessInput('');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Главный контейнер для всего экрана\n    _jsxDEV(\"div\", {\n      className: \"glass-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"room-title\",\n          children: [\"\\u0418\\u0433\\u0440\\u0430: \", game.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"room-info\",\n          children: game.status === 'in-progress' ? `Ход игрока: ${currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.name}` : 'Игра завершена!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"players-display glass-panel\",\n            children: game.players.map(player => /*#__PURE__*/_jsxDEV(PlayerCard, {\n              player: player,\n              isCurrentPlayer: player.id === socketId,\n              isTurn: player.id === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id),\n              characterOnForehead: player.id === socketId ? characterOnForehead : null\n            }, player.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), game.status === 'in-progress' && !hasGuessed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-section glass-panel\",\n            children: isMyTurn ?\n            /*#__PURE__*/\n            // Если сейчас мой ход\n            _jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"\\u0412\\u0430\\u0448 \\u0445\\u043E\\u0434! \\u0423\\u0433\\u0430\\u0434\\u0430\\u0439\\u0442\\u0435, \\u043A\\u0442\\u043E \\u0432\\u044B: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'var(--primary-color)'\n                  },\n                  children: characterOnForehead\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432: \", game.maxQuestionsPerTurn - ((myPlayer === null || myPlayer === void 0 ? void 0 : myPlayer.questionsAskedInTurn) || 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: questionInput,\n                  onChange: e => setQuestionInput(e.target.value),\n                  placeholder: \"\\u0417\\u0430\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 (\\u0434\\u0430/\\u043D\\u0435\\u0442)\",\n                  disabled: (myPlayer === null || myPlayer === void 0 ? void 0 : myPlayer.questionsAskedInTurn) >= game.maxQuestionsPerTurn,\n                  maxLength: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAskQuestion,\n                  className: \"btn primary\",\n                  disabled: (myPlayer === null || myPlayer === void 0 ? void 0 : myPlayer.questionsAskedInTurn) >= game.maxQuestionsPerTurn,\n                  children: \"\\u0421\\u043F\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: guessInput,\n                  onChange: e => setGuessInput(e.target.value),\n                  placeholder: \"\\u041F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0430 \\u0443\\u0433\\u0430\\u0434\\u0430\\u0442\\u044C \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0430\",\n                  maxLength: \"30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleMakeGuess,\n                  className: \"btn secondary\",\n                  children: \"\\u0423\\u0433\\u0430\\u0434\\u0430\\u0442\\u044C!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this) : amIAnswering ?\n            /*#__PURE__*/\n            // Если я должен отвечать\n            _jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 \\u043E\\u0442 \", currentPlayer.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\\"\", lastMessage.message, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '10px',\n                  justifyContent: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onAnswerQuestion(true),\n                  className: \"btn success\",\n                  children: \"\\u0414\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onAnswerQuestion(false),\n                  className: \"btn danger\",\n                  children: \"\\u041D\\u0435\\u0442\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this) :\n            /*#__PURE__*/\n            // Если я просто жду своего хода\n            _jsxDEV(\"h3\", {\n              children: \"\\u041E\\u0436\\u0438\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0445\\u043E\\u0434\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), hasGuessed && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"submitted-message glass-panel\",\n            style: {\n              textAlign: 'center',\n              padding: '20px'\n            },\n            children: \"\\u0412\\u044B \\u0443\\u0436\\u0435 \\u0443\\u0433\\u0430\\u0434\\u0430\\u043B\\u0438 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0430! \\u041E\\u0436\\u0438\\u0434\\u0430\\u0435\\u043C \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 26\n          }, this), game.status === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-over-section glass-panel\",\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0418\\u0433\\u0440\\u0430 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0430!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u043E\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C: \", ((_game$players$find = game.players.find(p => p.guessed)) === null || _game$players$find === void 0 ? void 0 : _game$players$find.name) || 'Неизвестно']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0418\\u0442\\u043E\\u0433\\u0438:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: 'none',\n                padding: 0\n              },\n              children: game.players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [p.name, \" \\u0431\\u044B\\u043B \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0435\\u043C: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: p.characterOnForehead\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 59\n                }, this)]\n              }, p.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-panel glass-panel\",\n          children: /*#__PURE__*/_jsxDEV(Chat, {\n            messages: game.chatMessages,\n            onSendMessage: onChatMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exit-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onLeaveGame,\n            className: \"btn danger\",\n            children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0438\\u0433\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(GameRoom, \"bniDSlQZvmWywcQZKMLPPZ7TOcU=\", false, function () {\n  return [useNavigate];\n});\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PlayerCard","Chat","jsxDEV","_jsxDEV","GameRoom","game","playerName","socketId","characterOnForehead","onAskQuestion","onAnswerQuestion","onMakeGuess","onChatMessage","onLeaveGame","_s","_game$players$find","questionInput","setQuestionInput","guessInput","setGuessInput","navigate","status","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPlayer","players","currentPlayerIndex","isMyTurn","id","myPlayer","find","p","hasGuessed","guessed","lastMessage","chatMessages","length","amIAnswering","sender","name","handleAskQuestion","trim","handleMakeGuess","map","player","isCurrentPlayer","isTurn","style","color","maxQuestionsPerTurn","questionsAskedInTurn","type","value","onChange","e","target","placeholder","disabled","maxLength","onClick","message","display","gap","justifyContent","textAlign","padding","listStyle","messages","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/stanislav/Desktop/who-am-i-game/frontend/src/components/GameRoom.js"],"sourcesContent":["// frontend/src/components/GameRoom.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PlayerCard from './PlayerCard';\r\nimport Chat from './Chat';\r\n\r\nfunction GameRoom({ game, playerName, socketId, characterOnForehead, onAskQuestion, onAnswerQuestion, onMakeGuess, onChatMessage, onLeaveGame }) {\r\n  const [questionInput, setQuestionInput] = useState('');\r\n  const [guessInput, setGuessInput] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Если игры нет или она в статусе ожидания, возвращаем в лобби\r\n    if (!game || game.status === 'waiting') {\r\n      navigate(`/lobby/${game?.code || ''}`);\r\n    }\r\n  }, [game, navigate]);\r\n\r\n  // Пока данные игры не загружены, показываем экран загрузки\r\n  if (!game) {\r\n    return <div className=\"loading-screen\">Загрузка игровой комнаты...</div>;\r\n  }\r\n\r\n  // Определяем ключевые переменные для удобства\r\n  const currentPlayer = game.players[game.currentPlayerIndex];\r\n  const isMyTurn = currentPlayer && currentPlayer.id === socketId;\r\n  const myPlayer = game.players.find(p => p.id === socketId);\r\n  const hasGuessed = myPlayer?.guessed;\r\n\r\n  // Определяем, нужно ли текущему игроку отвечать на вопрос\r\n  const lastMessage = game.chatMessages.length > 0 ? game.chatMessages[game.chatMessages.length - 1] : null;\r\n  // Кнопки \"Да/Нет\" показываются всем, кто не ходит в данный момент, после того как был задан вопрос.\r\n  // Сервер сам определит, чей ответ является правильным.\r\n  const amIAnswering = !isMyTurn && lastMessage && lastMessage.sender === currentPlayer?.name;\r\n\r\n  const handleAskQuestion = () => {\r\n    if (questionInput.trim() && isMyTurn && !hasGuessed) {\r\n      onAskQuestion(questionInput.trim());\r\n      setQuestionInput('');\r\n    }\r\n  };\r\n\r\n  const handleMakeGuess = () => {\r\n    if (guessInput.trim() && isMyTurn && !hasGuessed) {\r\n      onMakeGuess(guessInput.trim());\r\n      setGuessInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Главный контейнер для всего экрана\r\n    <div className=\"glass-panel\">\r\n      \r\n      {/* --- Секция 1: Заголовок --- */}\r\n      <div className=\"room-header\">\r\n        <h1 className=\"room-title\">Игра: {game.code}</h1>\r\n        <p className=\"room-info\">\r\n          {game.status === 'in-progress' ? `Ход игрока: ${currentPlayer?.name}` : 'Игра завершена!'}\r\n        </p>\r\n      </div>\r\n\r\n      {/* --- Секция 2: Основной макет (сетка из 2 колонок) --- */}\r\n      <div className=\"room-layout\">\r\n        \r\n        {/* --- Левая колонка --- */}\r\n        <div className=\"main-content\">\r\n          \r\n          <div className=\"players-display glass-panel\">\r\n            {game.players.map((player) => (\r\n              <PlayerCard\r\n                key={player.id}\r\n                player={player}\r\n                isCurrentPlayer={player.id === socketId}\r\n                isTurn={player.id === currentPlayer?.id}\r\n                characterOnForehead={player.id === socketId ? characterOnForehead : null}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {/* Блок с действиями, который виден только во время игры */}\r\n          {game.status === 'in-progress' && !hasGuessed && (\r\n            <div className=\"action-section glass-panel\">\r\n              {isMyTurn ? (\r\n                // Если сейчас мой ход\r\n                <div>\r\n                  <h3>Ваш ход! Угадайте, кто вы: <span style={{color: 'var(--primary-color)'}}>{characterOnForehead}</span></h3>\r\n                  <p>Осталось вопросов: {game.maxQuestionsPerTurn - (myPlayer?.questionsAskedInTurn || 0)}</p>\r\n                  <div className=\"input-group\">\r\n                    <input type=\"text\" value={questionInput} onChange={(e) => setQuestionInput(e.target.value)} placeholder=\"Задайте вопрос (да/нет)\" disabled={myPlayer?.questionsAskedInTurn >= game.maxQuestionsPerTurn} maxLength=\"100\" />\r\n                    <button onClick={handleAskQuestion} className=\"btn primary\" disabled={myPlayer?.questionsAskedInTurn >= game.maxQuestionsPerTurn}>Спросить</button>\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                    <input type=\"text\" value={guessInput} onChange={(e) => setGuessInput(e.target.value)} placeholder=\"Попытка угадать персонажа\" maxLength=\"30\" />\r\n                    <button onClick={handleMakeGuess} className=\"btn secondary\">Угадать!</button>\r\n                  </div>\r\n                </div>\r\n              ) : amIAnswering ? (\r\n                // Если я должен отвечать\r\n                <div>\r\n                  <h3>Ответьте на вопрос от {currentPlayer.name}:</h3>\r\n                  <p>\"{lastMessage.message}\"</p>\r\n                  <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>\r\n                    <button onClick={() => onAnswerQuestion(true)} className=\"btn success\">Да</button>\r\n                    <button onClick={() => onAnswerQuestion(false)} className=\"btn danger\">Нет</button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                // Если я просто жду своего хода\r\n                <h3>Ожидайте своего хода...</h3>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Сообщение для тех, кто уже угадал */}\r\n          {hasGuessed && <p className=\"submitted-message glass-panel\" style={{textAlign: 'center', padding: '20px'}}>Вы уже угадали своего персонажа! Ожидаем других.</p>}\r\n\r\n          {/* Секция окончания игры */}\r\n          {game.status === 'finished' && (\r\n            <div className=\"game-over-section glass-panel\" style={{textAlign: 'center'}}>\r\n              <h2>Игра завершена!</h2>\r\n              <p>Победитель: {game.players.find(p => p.guessed)?.name || 'Неизвестно'}</p>\r\n              <h3>Итоги:</h3>\r\n              <ul style={{listStyle: 'none', padding: 0}}>\r\n                {game.players.map(p => (\r\n                  <li key={p.id}>{p.name} был персонажем: <strong>{p.characterOnForehead}</strong></li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* --- Правая колонка (Чат) --- */}\r\n        <div className=\"chat-panel glass-panel\">\r\n          <Chat messages={game.chatMessages} onSendMessage={onChatMessage} />\r\n        </div>\r\n\r\n        {/* --- Секция 3: Кнопка выхода (под сеткой) --- */}\r\n        <div className=\"exit-button-container\">\r\n          <button onClick={onLeaveGame} className=\"btn danger\">Выйти из игры</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}